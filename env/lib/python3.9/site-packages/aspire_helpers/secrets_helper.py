import json
from logging import Logger
from typing import Dict

import boto3
from botocore.exceptions import ClientError


class AWSSecretManager:
    def __init__(self, log: Logger):
        self._log = log
        self._client = boto3.client("secretsmanager", region_name="eu-west-1")

    def get_secret(self, secret_id: str) -> Dict[str, str]:
        """Retrieve the value for a secret stored in AWS Secrets Manager.
        :param secret_id: str
            Either the ARN or the friendly name of the secret.
        :return:
        dict: contains the name and value of the secret. e.g
            {
                "my_secret_key_1": "shhDon'tTell"
                "my_secret_key_2": "I'mASecret"
            }
        """
        try:
            response = self._client.get_secret_value(SecretId=secret_id)
        except ClientError as e:
            self._log.exception(str(e) + "secret_name " + secret_id)
            raise

        if "SecretString" in response:
            self._log.debug("Decrypting raw secret with secret_name: " + secret_id)
            secret = response["SecretString"]

        try:
            secret_value = json.loads(secret)
        except json.decoder.JSONDecodeError:
            secret_value = secret

        return secret_value
