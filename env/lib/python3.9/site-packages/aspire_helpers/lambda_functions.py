import json
import logging
import os
import sys
from typing import Dict

import boto3
import botocore

from aspire_helpers.constants import EnvVars, get_common_var


def get_lambda_client():
    """
    Initialise Lambda client object
    """
    config = botocore.config.Config(
        read_timeout=920,
        connect_timeout=920,
        retries={"max_attempts": 0},
    )
    client = boto3.client("lambda", config=config, region_name="eu-west-1")
    logging.info(f"client:{client}")
    return client


def get_lambda_function_name():
    """
    Determine the name of the Lambda to invoke based on environment variables
    :return: str
    """
    database = get_common_var(EnvVars.DATABASE)
    suffix = "sf-query-test"

    if database == "stage":
        return f"stage-{suffix}"
    elif database == "PREPROD" or database == "PROD":
        return f"prd-{suffix}"
    else:
        return f"dev-{suffix}"


def invoke_snowflake_lambda(
    config_dict: Dict,
    lambda_client=get_lambda_client(),
    lambda_function_name=get_lambda_function_name(),
):
    """
    Invoke the Snowflake Lambda function
    :param config_dict: Dict
    :param lambda_client: Client
    :param lambda_function_name: str
    :return: json
    """

    payload = json.dumps({**config_dict, **{"env": os.getenv("env"), "barbossa": True}})
    response = lambda_client.invoke(FunctionName=lambda_function_name, Payload=payload)
    output = parse_lambda_response(response)
    return output


def parse_lambda_response(response):
    """
    Parse results from lambda_client into json object
    :param response: lambda_client Response object
    :return: results
    """
    resp = response["Payload"].read().decode("utf-8")

    try:
        results = json.loads(resp)
        for idx, val in enumerate(results):
            results[idx] = json.loads(results[idx])
    except json.JSONDecodeError as e:
        print(
            f"ðŸ’¥ JSONDecodeError: {e.msg} | "
            f"Unexpected response from Snowflake Lambda."
        )
        print(f"ðŸ’¬ Lambda Response: {resp}")
        sys.exit(1)
    except TypeError as e:
        print(f"ðŸ’¥ TypeError: {e} | " f"Unexpected response from Snowflake Lambda.")
        print(f"ðŸ’¬ Lambda Response: {resp}")
        sys.exit(1)

    return results
